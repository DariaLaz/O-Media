@model MyCompetitionsQueryModel
@{
    ViewData["Title"] = "All Competitions";
}

<link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css" rel="stylesheet">



<form method="get">
    <div class="row">
        <div class="form-group col-md-3">
            <label asp-for="SearchTerm"></label>
            <input asp-for="SearchTerm" class="form-control" placeholder="...">
        </div>
        <div class="form-group col-md-3">
            <div class="form-group">
                <label asp-for="Sorting"></label>
                <select asp-for="Sorting" class="form-control">
                    <option value="0">Newest</option>
                    <option value="1">Oldest</option>
                </select>
            </div>
        </div>
        <div class="form-group col-md-3 d-flex justify-content-between">
            <div class="form-group">
                <label asp-for="Year"></label>
                <select asp-for="Year" class="form-control">
                    <option value="">All</option>
                    @foreach (var year in Model.Years)
                    {
                        <option value="@year">@year</option>
                    }
                </select>
            </div>
        </div>
         <div class="form-group col-md-3 d-flex justify-content-between">
            <div class="form-group">
                <label asp-for="Role"></label>
                <select asp-for="Role" class="form-control">
                    <option value="Organizer">Organizer</option>
                    <option value="Participant">Participant</option>
                </select>
            </div>
        </div>
        <div class="col-md-3">
            <div class="form-group mt-1 p-2">
                <input type="submit" value="Search" class="btn btn-secondary" />
            </div>
        </div>
    </div>
</form>



@{
    var previousPage = Model.CurrentPage - 1;
    if (previousPage < 1)
    {
        previousPage = 1;
    }

    var maxPage = Math.Ceiling((double)Model.TotalCompetitionsCount /
        AllCompetitionsQueryModel.CompetitionsPerPage);
}

<div class="row mb-5">
    <div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-start">
        <a class="btn btn-light @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
           asp-controller="Competition"
           asp-action="Mine"
           asp-route-currentPage="@previousPage"
           asp-route-searchTerm="@Model.SearchTerm"
           asp-route-sorting="@((int)Model.Sorting)">🡸</a>
    </div>


   <div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-end">
        <a class="btn btn-light 
           @((Model.CurrentPage == maxPage || !Model.Competitions.Any()) ? "disabled" : string.Empty)"
           asp-controller="Competition"
           asp-action="Mine"
           asp-route-currentPage="@(Model.CurrentPage + 1)"
           asp-route-searchTerm="@Model.SearchTerm"
           asp-route-sorting="@((int)Model.Sorting)">🡺</a>
    </div>
</div>

@if (Model.Competitions.Count() == 0)
{
    <h2 class="text-center">No competitions found by the given criteria!</h2>
}

<div class="row">
    @foreach (var comp in Model.Competitions)
    {
        <partial name="_CompetitionPartial" model="@comp" />
    }
</div>

